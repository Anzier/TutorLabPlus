html
	head
		link(href="/css/style.css", rel="stylesheet", type="text/css")
		script(src="http://code.jquery.com/jquery-latest.min.js")
		script(src='http://d3js.org/d3.v3.min.js')
		script(src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/4.6.1/lodash.min.js")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.min.js")			
		script(type = 'text/javascript').
	body
				div.gt-squeeze-graph
						div.gt-home-form#chartArea
							p.gt-title LOGGED IN #{lname}
							script.
								var viewtype = {};
								var prevView;
								var dates = {};
								var formattedData = [];
								var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
								var dayOfWeek = {0:'Sunday',1:'Monday',2:'Tuesday',3:'Wednesday',4:'Thursday',5:'Friday',6:'Saturday'};
								var svg = d3.select('.gt-home-form')
											.append('svg')
											.attr('width','100%')
											.attr('height','100%')
											.append('g')
											.attr('transform', 'translate(' + 250 + ', ' + 100 + ')')
								var h = 500;
								var w = 500;
								var professors;
								var lname = "#{lname}";
								lname = lname.replace(/&quot;/g, '')
								var today = new Date();
								var currMonth = today.getMonth();
								var currDay   = moment(today);
								var maxDayMap = [];
								maxDayMap[0] = 0;
								maxDayMap[1] = 0;
								maxDayMap[2] = 0;
								maxDayMap[3] = 0;
								maxDayMap[4] = 0;
								maxDayMap[5] = 0;
								maxDayMap[6] = 0;
								var data = !{data}
								var classes = !{courses}
								//also should be able to get most busy day based on class.
								//the class selector should probably requery the database...
								//so if button pressed. route to page for specific course.
								    data.forEach(function(studentSession){
								        //this will be problematic with months 10,11,12.
								        // console.log(studentSession.timeIn.substring(0,10));
								        if(dates.hasOwnProperty(studentSession.timeIn.substring(0,8))){
								          dates[studentSession.timeIn.substring(0,8)]++;
								        }else{
								          dates[studentSession.timeIn.substring(0,8)]=1;
								        }
								    })
								    for(date in dates){
								    	//also get the value for each date and store it in the maxDayMap
								    	var d = {};
								    	d.date = d3.time.format('%m/%d/%Y').parse(date);
								    	maxDayMap[d.date.getDay()] += dates[date];
								    	d.count = dates[date];
								    	formattedData.push(d);
								    }
								    //finding the max day
								    var max = -9999999;
								    var index;
								    //we can hard code this, as the number of days in the week doesn't change.
								    for(var i = 0;i<6;i++){
								    	if(max < maxDayMap[i]){
								    		max = maxDayMap[i]
								    		index = i;
								    	}
								    }
									var popularDay = document.createElement('paragraph');
									popularDay.setAttribute('class','pull--right');
									popularDay.textContent = dayOfWeek[index];
									$('.gt-title').append(popularDay);
									updateChart();
								function updateChart (type) {
									var data = formattedData;
									var todayDate = moment(today);
									var testToday = moment(today);
									if(typeof type !== 'undefined'){
										if(type.view === "monthly" && typeof type.nav === "undefined"){
											prevView = "monthly"
											//change title to reflect user selection
											$('.gt-title').text(monthNames[today.getMonth()])
											$('.gt-title').append(popularDay);
											data = data.filter(function(d){
												if(today.getMonth()===d.date.getMonth()){
													return d;
												}
											})
										}else if(type.view === "weekly" && typeof type.nav === "undefined"){
											$('.gt-title').text("Weekly View")
											$('.gt-title').append(popularDay);
											if(prevView === "monthly"){
												console.log("switched from a monthly view");
											}else{
												data = data.filter(function(d){
													if(todayDate.isSame(moment(d.date),"week")){
														return d;
													}
												})
											}
											prevView = "weekly"
										}
										if(type.nav === "previous" && type.view === "monthly"){
											console.log(currMonth);
											$('.gt-title').append(popularDay);
											if(currMonth == 0){
												currMonth = 11;
											}else{
												currMonth--;										
											}
											$('.gt-title').text(monthNames[currMonth])
											$('.gt-title').append(popularDay);
											data = data.filter(function(d){
												if(currMonth===d.date.getMonth()){
													return d;
												}
											})
										}
										if(type.nav === "next" && type.view === "monthly"){
											if(currMonth==11){
												currMonth = 0;
											}else{
												currMonth++;										
											}
											$('.gt-title').text(monthNames[currMonth])
											$('.gt-title').append(popularDay);
											data = data.filter(function(d){
												if(currMonth===d.date.getMonth()){
													return d;
												}
											})
										}
										if(type.nav === "previous" && type.view === "weekly"){
											//if there is no data, just keep calling this until there is.
											currDay = moment(currDay).subtract(7,'day');
											$('.gt-title').text("Weekly View")		
											$('.gt-title').append(popularDay);
											//if i wanted to show months, but I feel its misleading
											//$('.gt-title').text(monthNames[currDay.month()])
											data = data.filter(function(d){
												if(currDay.isSame(moment(d.date),"week")){
													return d;
												}
											})
										}
										if(type.nav === "next" && type.view === "weekly"){
											currDay = moment(currDay).add(7,'day');
											//$('.gt-title').text(monthNames[currDay.month()])
											data = data.filter(function(d){
												if(currDay.isSame(moment(d.date),"week")){
													return d;
												}
											})
										}								
									}
									var dates = _.map(data, 'date');
									var counts = _.map(data, 'count');
									var x = d3.time.scale()
									  //examine the date array, return the minimum and maximum for scaling
									  .domain(d3.extent(dates))
									  .range([0, w]);

									var y = d3.scale.linear()
									  .domain(d3.extent(counts))
									  .range([h, 75]);
									var area = d3.svg.area()
									  .interpolate('basis')
									  .x(function (d) {
									    return x(d.date);
									  })
									  //bottom for area
									  //for some reason 0 is making the area over draw into the axes
									  .y0(function (d) {
									  	return y(1);
									  })
									  //top for area
									  .y1(function (d) {
									    return y(d.count);
									  })
									var xAxis = d3.svg.axis()
										.scale(x)
										.orient('bottom')
										.ticks(5)
										.innerTickSize(6)
										.outerTickSize(12)
										.tickPadding(12);
									var yAxis = d3.svg.axis()
													.scale(y)
													.orient('left');
									//remove old chart so we can append to a fresh one
									svg.selectAll('*').remove();
									//add y-axis
									svg.append('g')
										.attr('class','y axis')
										.attr('transform', 'translate(-20, '+0+')')
										.call(yAxis)
									//add x-axis
									svg.append('g')
										.attr('class','x axis')
										.attr('transform', 'translate(0, '+(h+30)+')')
										.call(xAxis)
									//add area
									svg.append('g')
										.append('path')
										// if in monthly view mouse click switches to weekly view
										// if in weekly view, mouse click to see list of students
										//maybe on mouse click show the list of students?
									  	//maybe on mouse click show the questions asked??
									  	.on('mouseover',function(d){
									  		d3.select(this).classed('active',true);
									  	})
									  	.on('mouseout',function(d){
									  		d3.select(this).classed('active',false)
									  	})
									  	.on('mousedown',function(d){
									  		if(type.view === "monthly"){
									  			type.view = "weekly"
									  			updateChart(type)
									  		}else{
									  			//show list of students
									  		}
									  	})
										.datum(data)
										.style('opacity',0)
										.attr('fill','#EDEDD1')
										.transition()
										.duration(800)
										.attr('d',area)
										.style('opacity',1)


								}
				div.gt-lowerButton#lowerbuttons		
						button(class="btn",type="submit", onclick="updateChart('weekly')", id = 'weekly').
							Week
						//in monthly view, if tuesday is clicked, so all tuesday data
						button(class="btn",type="submit", onclick="updateChart('monthly')",id='monthly').
							Month
						button(class="btn",type="submit", onclick = "window.location.href='/"+lname.replace(/['"]+/g, '')+"'", id = 'home').
							Home
						br
						//update chart to previous month onclick
						button(class="btn",type="submit", id = 'previous',onclick="updateChart('previous')").
							<<
						//update chart to next month onclick
						button(class="btn",type="submit", id = 'next', onclick="updateChart('next')").
							>>
						br
					script.
						$('#weekly').click(function(){
							viewtype.view = "weekly"
							delete viewtype.nav; 
							updateChart(viewtype)
						});
						classes.forEach(function(course){
							var newClass = document.createElement('button');
							newClass.setAttribute('class','btn');
							newClass.setAttribute('id','classes');
							newClass.setAttribute('type','submit')
							newClass.textContent = course.cName;
							newClass.onclick = function(e){
								//this needs to be the prof name
								location.href = '/'+ lname +'/'+course.cName;
								//- e.preventDefault();
								//I think it would be better to do a post here instead.
								//- viewtype.course = $(this).text();
								//- delete viewtype.nav;
								//- updateChart(viewtype);
							}
							document.getElementById('lowerbuttons').appendChild(newClass);
						})
						$('#monthly').click(function(){
							viewtype.view = "monthly"
							delete viewtype.nav
							updateChart(viewtype)
						})
						$('#previous').click(function(){
							viewtype.nav = "previous"
							updateChart(viewtype)
						})

						$('#next').click(function(){
							viewtype.nav = "next"
							updateChart(viewtype)
						})





	