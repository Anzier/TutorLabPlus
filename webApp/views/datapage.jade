html
	head
		link(href="/css/style.css", rel="stylesheet", type="text/css")
		script(src="http://code.jquery.com/jquery-latest.min.js")
		script(src='http://d3js.org/d3.v3.min.js')
		script(src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/4.6.1/lodash.min.js")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.min.js")			
	body
				div.gt-squeeze
						div.gt-home-form#chartArea
							p.gt-title LOGGED IN #{lname}
							//update chart to previous month onclick
							button(class="btn",type="submit", id = 'previous',onclick="updateChart('previous')").
								<<

							//update chart to next month onclick
							button(class="btn",type="submit", id = 'next', onclick="updateChart('next')").
								>>
							script.
								$('#previous').click(function(){
									viewtype.nav = "previous"
									updateChart(viewtype)
								})
								$('#next').click(function(){
									viewtype.nav = "next"
									updateChart(viewtype)
								})
							script.
								var viewtype = {};
								var prevView;
								var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
								var svg = d3.select('.gt-home-form')
											.append('svg')
											.attr('width','100%')
											.attr('height','100%')
											.append('g')
											.attr('transform', 'translate(' + 250 + ', ' + 100 + ')')
								var h = 500;
								var w = 500;
								var data;
								var lname = "#{lname}";
								lname = lname.replace(/&quot;/g, '')
								var today = new Date();
								var currMonth = today.getMonth();
								var currDay   = moment(today);
								$.getJSON('http://127.0.0.1:3000/data/'+lname,function(json){
									console.log(json.Watson)
									data = json.Watson;
									json.Watson.forEach(function(d){
										d.date = d3.time.format('%Y%m%d').parse(d.date);
									})
									//show some kind of general chart
									updateChart();

								})
								function updateChart (type) {	
									//this currently breaks as there is no data.
									//- var data = professors[lname];
									var todayDate = moment(today);
									var testToday = moment(today);
									if(typeof type !== 'undefined'){
										if(type.view === "monthly" && typeof type.nav === "undefined"){
											prevView = "monthly";
											//change title to reflect user selection
											$('.gt-title').text(monthNames[today.getMonth()])
											//query db for all monthly data associated with lName
											//we're probably going to need specific data endpoints for each query
										}else if(type.view === "weekly" && typeof type.nav === "undefined"){
											prevView = "weekly";
											$('.gt-title').text("Weekly View")
											//query db for all weekly data associated with lName
										}
										if(type.nav === "previous" && type.view === "monthly"){
											if(currMonth == 0){
												currMonth = 11;
											}else{
												currMonth--;										
											}
											//currMonth tells us which month to query for
											$('.gt-title').text(monthNames[currMonth])
											//query db for previous month.
										}
										if(type.nav === "next" && type.view === "monthly"){
											if(currMonth==11){
												currMonth = 0;
											}else{
												currMonth++;										
											}
											//currMonth tells us which month to query for.
											$('.gt-title').text(monthNames[currMonth])
											//query db for next month.
										}
										if(type.nav === "previous" && type.view === "weekly"){
											//this variable tells us what day the graph thinks it is, so query for this day.
											currDay = moment(currDay).subtract(7,'day');
											$('.gt-title').text("Weekly View")		
											//query db for previous week NOTE: if there is not data, query for the next availible weekly data.
										}
										if(type.nav === "next" && type.view === "weekly"){
											//this variable tells us what day the graph thinks it is, so query for this day.
											currDay = moment(currDay).add(7,'day');
											//$('.gt-title').text(monthNames[currDay.month()])
											//query db for previous week NOTE: if there is not data, query for the next availible weekly data.
										}								
									}
									//same code for displaying the graph, only difference is we don't need to filter anymore (yay!)
									var dates = _.map(data, 'date');
									var counts = _.map(data, 'count');
									var x = d3.time.scale()
									  //examine the date array, return the minimum and maximum for scaling
									  .domain(d3.extent(dates))
									  .range([0, w]);

									var y = d3.scale.linear()
									  .domain(d3.extent(counts))
									  .range([h, 75]);
									var area = d3.svg.area()
									  .interpolate('basis')
									  .x(function (d) {
									    return x(d.date);
									  })
									  //bottom for area
									  .y0(function (d) {
									  	return y(0);
									  })
									  //top for area
									  .y1(function (d) {
									    return y(d.count);
									  })
									var xAxis = d3.svg.axis()
										.scale(x)
										.orient('bottom')
										.ticks(5)
										.innerTickSize(6)
										.outerTickSize(12)
										.tickPadding(12);
									var yAxis = d3.svg.axis()
													.scale(y)
													.orient('left');
									//remove old chart so we can append to a fresh one
									svg.selectAll('*').remove();
									//add y-axis
									svg.append('g')
										.attr('class','y axis')
										.attr('transform', 'translate(-20, '+0+')')
										.call(yAxis)
									//add x-axis
									svg.append('g')
										.attr('class','x axis')
										.attr('transform', 'translate(0, '+(h+30)+')')
										.call(xAxis)
									//add area
									svg.append('g')
										.append('path')
										// if in monthly view mouse click switches to weekly view
										// if in weekly view, mouse click to see list of students
										//maybe on mouse click show the list of students?
									  	//maybe on mouse click show the questions asked??
									  	.on('mouseover',function(d){
									  		d3.select(this).classed('active',true);
									  	})
									  	.on('mouseout',function(d){
									  		d3.select(this).classed('active',false)
									  	})
									  	.on('mousedown',function(d){
									  		if(type.view === "monthly"){
									  			type.view = "weekly"
									  			updateChart(type)
									  		}else{
									  			//show list of students
									  		}
									  	})
										.datum(data)
										.style('opacity',0)
										.attr('fill','teal')
										.transition()
										.duration(800)
										.attr('d',area)
										.style('opacity',1)
								}
				div.gt-squeeze#lowerbuttons			
						button(class="btn",type="submit", onclick="updateChart('weekly')", id = 'weekly').
							Week
						//in monthly view, if tuesday is clicked, so all tuesday data
						button(class="btn",type="submit", onclick="updateChart('monthly')",id='monthly').
							Month
					script.
						$('#weekly').click(function(){
							viewtype.view = "weekly"
							delete viewtype.nav; 
							updateChart(viewtype)
						})
						$('#monthly').click(function(){
							viewtype.view = "monthly"
							delete viewtype.nav
							updateChart(viewtype)
						})